{"version":3,"sources":["componets/NavBar/index.js","componets/SearchForm/index.js","utils/API.js","componets/Image/index.js","componets/SearchResults/index.js","componets/sortBtn/index.js","componets/Table/index.js","pages/Main.js","componets/Wrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","SearchForm","props","htmlFor","type","value","search","onChange","handleInputChange","name","list","placeholder","id","onClick","handleReset","axios","get","Image","key","image","alt","src","SearchResults","results","map","result","firstName","lastName","scope","email","sortBtn","handleBtnClick","data-value","text","Table","console","log","Main","useState","employees","setEmployees","setSearch","useEffect","API","then","res","data","employee","picture","thumbnail","first","last","catch","err","e","target","newArray","length","filter","item","includes","employeeSearch","btnType","getAttribute","firstArray","sort","a","b","lastArray","Wrapper","children","App","NavBar","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.436ebbd4.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n  <span className=\"navbar-brand mb-0 h1\">Employee Directory</span>\r\n</nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from \"react\"\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n      <form className=\"search\">\r\n        <div className=\"form-group row col-lg-12 col-md-10 col-sm-8\">\r\n          <label htmlFor=\"name\" className=\"col-form-label col-md-4 text-right\">Search by name</label>\r\n          <div className=\"col-md-6 px-0\">\r\n          <input\r\n            type=\"email\"\r\n            value={props.search}\r\n            onChange={props.handleInputChange}\r\n            name=\"search\"\r\n            list=\"names\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search Employees Here\"\r\n            id=\"inputEmail4\"\r\n          />\r\n          </div>\r\n          <div className=\"col-md-2 mx-0 px-0\">\r\n          <button type=\"reset\" onClick={props.handleReset} className=\"btn btn-danger col-2\">X</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default SearchForm","import axios from \"axios\"\r\n\r\nexport default {\r\n    fetchEmployees: function() {\r\n        return axios\r\n            .get(\"https://randomuser.me/api/?results=50\")\r\n    }\r\n}","import React from \"react\"\r\n\r\nfunction Image(props) {\r\n    return (\r\n        <img key={props.image} alt=\"employee-pic\" src={props.image} className=\"employee-pic\"/>\r\n    )\r\n}\r\n\r\nexport default Image","import React from \"react\"\r\nimport Image from \"../Image\"\r\n\r\nfunction SearchResults(props) {\r\n    return(\r\n        <tbody className=\"search-results table-row\">\r\n            {props.results.map(result => (\r\n                <tr key={result.firstName + result.lastName}>\r\n                    <th scope=\"row\" key={result.id} className=\"employee-image entry\"><Image image={result.image} /></th>\r\n                    <td key={result.firstName} className=\"first-name entry\">{result.firstName}</td>\r\n                    <td key={result.lastName} className=\"last-name entry\">{result.lastName}</td>\r\n                    <td key={result.email} className=\"email entry\">{result.email}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default SearchResults","import React from \"react\"\r\n\r\nfunction sortBtn(props) {\r\n    return (\r\n        <button onClick={props.handleBtnClick} data-value={props[\"data-value\"]} className={`btn btn-info ${props[\"data-value\"]}`}>\r\n            {props.text}\r\n        </button>\r\n    )\r\n}\r\nexport default sortBtn","import React from \"react\"\r\nimport SearchResults from \"../SearchResults\"\r\nimport SortBtn from \"../sortBtn\"\r\n\r\n\r\nfunction Table(props) {\r\n     console.log(\"Table\", props.results)\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row my-2 ml-5\">\r\n                <div className=\"col-4 mx-2\">\r\n                <SortBtn handleBtnClick={props.handleBtnClick} data-value=\"first-name-sort\" text=\"Sort by First Name\">\r\n                </SortBtn>\r\n                </div>\r\n                <div className=\"col-4 mx-2\">\r\n                <SortBtn handleBtnClick={props.handleBtnClick} data-value=\"last-name-sort\" text=\"Sort by Last Name\">\r\n                </SortBtn>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <table className=\"table\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                    <th scope=\"col\"></th>\r\n                    <th scope=\"col\">First Name</th>\r\n                    <th scope=\"col\">Last Name</th>\r\n                    <th scope=\"col\">E-Mail Address</th>\r\n                    </tr>\r\n                </thead>\r\n                <SearchResults results={props.results} handleBtnClick={props.handleBtnClick} />\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","import React, { useState, useEffect} from \"react\"\r\nimport SearchForm from \"../componets/SearchForm\"\r\nimport API from \"../utils/API\"\r\nimport Table from \"../componets/Table\"\r\n\r\nfunction Main() {\r\n    // const [employee, setEmployee] = useState({})\r\n    const [employees, setEmployees] = useState([])\r\n    // const [employeeIndex, setEmployeeIndex] = useState(0)\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    const handleInputChange = e => {\r\n        let value = e.target.value\r\n        setSearch(value)\r\n    }\r\n\r\n    function handleReset() {\r\n        setSearch(\"\")\r\n    }\r\n\r\n    function handleBtnClick(e) {\r\n        let btnType = e.target.getAttribute(\"data-value\")\r\n        let newArray = [...employees]\r\n\r\n        if (employees.length === 0) {\r\n            return\r\n        }\r\n\r\n        if (btnType === \"first-name-sort\") {\r\n            const firstArray = newArray.sort((a,b) => (a.firstName > b.firstName) ? 1 : (b.firstName > a.firstName) ? -1 : 0)\r\n            console.log(\"sort first name\", firstArray)\r\n            setEmployees(firstArray)\r\n        }\r\n        else if (btnType === \"last-name-sort\") {\r\n            const lastArray = newArray.sort((a,b) => (a.lastName > b.lastName) ? 1 : (b.lastName > a.lastName) ? -1 : 0)\r\n            console.log(\"sort last name\", lastArray)\r\n            setEmployees(lastArray)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadEmployees()\r\n    }, [])\r\n\r\n   \r\n   function employeeSearch() {\r\n        let newArray = [...employees]\r\n\r\n        if (employees.length === 0) {\r\n            return newArray\r\n        }\r\n        if (search === \"\") {\r\n            return newArray\r\n        }\r\n\r\n        newArray = newArray.filter(item => {\r\n            return item.firstName.includes(search)\r\n        })\r\n\r\n        return newArray\r\n    }\r\n    \r\n    function loadEmployees() {\r\n        API.fetchEmployees()\r\n            .then(res => {\r\n                console.log(\"API res\", res.data.results)\r\n                const APIResults = res.data.results\r\n                const results = APIResults.map(employee => {\r\n                    return {\r\n                        id: employee.id.value,\r\n                        image: employee.picture.thumbnail,\r\n                        firstName: employee.name.first,\r\n                        lastName: employee.name.last,\r\n                        email: employee.email\r\n                    }\r\n                })\r\n                console.log(\"Relevant Employee Data\", results)\r\n                setEmployees(results)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SearchForm handleInputChange={handleInputChange} handleReset={handleReset} search={search} />\r\n            <Table results={employeeSearch()} handleBtnClick={handleBtnClick} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n\r\n","import React from \"react\"\r\n\r\nfunction Wrapper(props) {\r\nreturn <main className=\"wrapper\">{props.children}</main>\r\n}\r\n\r\nexport default Wrapper","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport NavBar from \"./componets/NavBar\"\nimport Main from \"./pages/Main\"\nimport Wrapper from \"./componets/Wrapper\"\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavBar />\n        <Wrapper>\n          <Main />\n        </Wrapper>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}